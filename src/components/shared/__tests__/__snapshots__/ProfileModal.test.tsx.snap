// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`[ProfileModal] rendering test Render without crashing 1`] = `
Object {
  "asJSON": [Function],
  "baseElement": <View
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      collapsable={true}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#ffffff",
              "flexBasis": 0,
              "flexDirection": "column",
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "backgroundColor": "transparent",
              "flex": 1,
              "flexDirection": "row",
              "height": "100%",
              "justifyContent": "center",
              "position": "absolute",
              "width": "100%",
            }
          }
        >
          <ActivityIndicator
            animating={true}
            color="#969696"
            hidesWhenStopped={true}
            size="large"
          />
        </View>
      </View>
    </View>
  </View>,
  "container": <View
    collapsable={true}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#ffffff",
            "flexBasis": 0,
            "flexDirection": "column",
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
          },
        ]
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "center",
            "backgroundColor": "transparent",
            "flex": 1,
            "flexDirection": "row",
            "height": "100%",
            "justifyContent": "center",
            "position": "absolute",
            "width": "100%",
          }
        }
      >
        <ActivityIndicator
          animating={true}
          color="#969696"
          hidesWhenStopped={true}
          size="large"
        />
      </View>
    </View>
  </View>,
  "debug": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByHintText": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByDisplayValue": [Function],
  "findByHintText": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByHintText": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByDisplayValue": [Function],
  "getByHintText": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByHintText": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByDisplayValue": [Function],
  "queryByHintText": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
