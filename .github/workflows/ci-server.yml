name: Server

on:
  push:
    branches: [master]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    strategy:
      matrix:
        platform: [ubuntu-latest]
        node: ["15"]
    name: Node ${{ matrix.node }} (${{ matrix.platform }})
    runs-on: ${{ matrix.platform }}
    defaults:
      run:
        working-directory: server

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_DB: test
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test!
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Install modules
        run: yarn

      - name: COPY env
        run: cp dotenv/test.env prisma/.env

      - name: Generate prisma types
        run: yarn generate

      - name: Check linting
        run: yarn lint

      - name: Build typescript
        run: yarn tsc

      - name: Remove dist
        run: rm -rf ./dist

      - name: Test
        run: yarn test --coverage --detectOpenHandles --forceExit

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1.0.10
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage/
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
          path_to_write_report: ./coverage/codecov_report.gz
