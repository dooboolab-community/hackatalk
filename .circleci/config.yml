version: 2.1
orbs:
  codecov: codecov/codecov@1.0.5
jobs:
  server:
    docker:
      - image: circleci/node:12.12.0
      - image: circleci/postgres:11
        environment:
          POSTGRES_DB: test
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test!
    working_directory: ~/dooboo
    steps:
      - checkout

      - run:
          name: update-npm
          command: 'sudo npm install -g npm@latest'

      - run:
          name: Install packages
          working_directory: server
          command: |
            yarn

      - run:
          name: ESLint
          working_directory: server
          command: |
            yarn lint

      - run:
          name: TSC build
          working_directory: server
          command: |
            yarn tsc

      - run:
          name: Remove dist
          working_directory: server
          command: |
            rm -rf ./dist

      - run:
          name: Jest test
          working_directory: server
          command: |
            yarn test --coverage --silent --detectOpenHandles

      - codecov/upload:
          file: ./server/coverage/lcov.info
          token: 0fc24d24-3658-478c-8976-9e832903e609

  client:
    working_directory: ~/dooboo
    docker:
      - image: circleci/node:12.12.0
    environment:
      TZ: 'Asia/Seoul'
    steps:
      - checkout

      - restore_cache:
          key: yarn-v1-{{ checksum "client/yarn.lock" }}-{{ arch }}

      - restore_cache:
          key: node-v1-{{ checksum "client/package.json" }}-{{ arch }}

      - run:
          name: Install packages
          working_directory: client
          command: |
            yarn

      - save_cache:
          key: yarn-v1-{{ checksum "client/yarn.lock" }}-{{ arch }}
          working_directory: client
          paths:
            - ~/.cache/yarn

      - save_cache:
          key: node-v1-{{ checksum "client/package.json" }}-{{ arch }}
          working_directory: client
          paths:
            - ./node_modules

      - persist_to_workspace:
          root: ~/dooboo
          working_directory: client
          paths:
            - ./node_modules

      - run:
          name: Lint Test
          working_directory: client
          command: |
            yarn lint --quiet

      - run:
          name: COPY config
          working_directory: client
          command: |
            yarn cp:config

      - run:
          name: TS Test
          working_directory: client
          command: |
            yarn tsc

      - run:
          name: Jest Test
          working_directory: client
          command: |
            mkdir -p coverage
            yarn test -u --coverage --max-workers=2 --silent
          environment:
            JEST_JUNIT_OUTPUT: test-results/jest/junit.xml

      - codecov/upload:
          file: ./coverage/lcov.info
          token: 0fc24d24-3658-478c-8976-9e832903e609

      - store_test_results:
          working_directory: client
          path: coverage

      - store_artifacts:
          working_directory: client
          path: coverage

  android:
    working_directory: ~/dooboo
    docker:
      - image: circleci/android:api-29-node
    steps:
      - checkout:
          path: ~/dooboo

      - attach_workspace:
          at: ~/dooboo

      - restore_cache:
          key: yarn-v1-{{ checksum "client/yarn.lock" }}-{{ arch }}

      - restore_cache:
          key: node-v1-{{ checksum "client/package.json" }}-{{ arch }}

      - run:
          name: Install packages
          working_directory: client
          command: |
            yarn

      - save_cache:
          key: yarn-v1-{{ checksum "client/yarn.lock" }}-{{ arch }}
          paths:
            - ~/.cache/yarn

      - save_cache:
          key: node-v1-{{ checksum "client/package.json" }}-{{ arch }}
          paths:
            - node_modules

      - run:
          name: COPY env
          working_directory: client
          command: |
            cp .env.sample .env

      - run:
          name: Check MD5 on files
          working_directory: client
          command: |
            md5sum android/build.gradle
            md5sum android/app/build.gradle            
            cat android/app/build.gradle | sed -n -e '/dependencies/,$p' > android.app.build.gradle.deps

      - restore_cache:
          key: android-jars-v1-{{ checksum "client/android/build.gradle" }}-{{ checksum  "client/android.app.build.gradle.deps" }}

      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies --max-workers=2
          working_directory: client/android

      - save_cache:
          key: android-jars-v1-{{ checksum "client/android/build.gradle" }}-{{ checksum  "client/android/android.app.build.gradle.deps" }}
          paths:
            - ~/.gradle

      - run:
          name: Build Android JS Bundle
          working_directory: client
          command: |
            yarn build:android --max-workers=2

      # - run:
      #     name: Build Android APK
      #     working_directory: android
      #     command: |
      #       ./gradlew assembleDebug --max-workers=2

  ios:
    macos:
      xcode: '9.0'
    working_directory: ~/dooboo

    # use a --login shell so our "set Ruby version" command gets picked up for later steps
    shell: /bin/bash --login -o pipefail

    steps:
      - checkout:
          path: ~/dooboo

      - attach_workspace:
          at: ~/dooboo

      - run:
          name: set Ruby version
          command: echo "ruby-2.4" > ~/.ruby-version

      - restore_cache:
          key: yarn-v1-{{ checksum "client/yarn.lock" }}-{{ arch }}

      - restore_cache:
          key: node-v1-{{ checksum "client/package.json" }}-{{ arch }}

      # not using a workspace here as Node and Yarn versions
      # differ between our macOS executor image and the Docker containers above
      - run: yarn install

      - save_cache:
          key: yarn-v1-{{ checksum "client/yarn.lock" }}-{{ arch }}
          paths:
            - ~/.cache/yarn

      - save_cache:
          key: node-v1-{{ checksum "client/package.json" }}-{{ arch }}
          paths:
            - node_modules

      - restore_cache:
          key: bundle-v1-{{ checksum "client/ios/Gemfile.lock" }}-{{ arch }}

      - run:
          command: bundle install
          working_directory: ios

      - save_cache:
          key: bundle-v1-{{ checksum "client/ios/Gemfile.lock" }}-{{ arch }}
          paths:
            - vendor/bundle

      - run:
          command: bundle exec fastlane test
          working_directory: ios

      - run:
          name: set up test results
          working_directory: ios
          when: always
          command: |
            mkdir -p test-results/fastlane test-results/xcode
            mv fastlane/report.xml test-results/fastlane
            mv fastlane/test_output/report.junit test-results/xcode/junit.xml
      - store_test_results:
          path: client/ios/test-results

      - store_artifacts:
          path: client/ios/test-results

workflows:
  version: 2.1
  node-android-ios:
    jobs:
      - server
      - client
      - android:
          requires:
            - client
      # - ios:
      #     requires:
      #       - client
