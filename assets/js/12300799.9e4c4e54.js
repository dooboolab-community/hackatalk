(self.webpackChunkhackatalk_website=self.webpackChunkhackatalk_website||[]).push([[3066],{3905:function(e,t,a){"use strict";a.d(t,{Zo:function(){return m},kt:function(){return d}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),s=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},m=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),u=s(a),d=r,k=u["".concat(p,".").concat(d)]||u[d]||c[d]||o;return a?n.createElement(k,l(l({ref:t},m),{},{components:a})):n.createElement(k,l({ref:t},m))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,l=new Array(o);l[0]=u;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var s=2;s<o;s++)l[s]=a[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},66:function(e,t,a){"use strict";a.r(t),a.d(t,{frontMatter:function(){return l},contentTitle:function(){return i},metadata:function(){return p},toc:function(){return s},default:function(){return c}});var n=a(2122),r=a(9756),o=(a(7294),a(3905)),l={id:"installation",title:"Installation",sidebar_label:"Installation"},i=void 0,p={unversionedId:"server/installation",id:"server/installation",isDocsHomePage:!1,title:"Installation",description:"Server project belongs to seperate directory server, in github.",source:"@site/docs/server/installation.md",sourceDirName:"server",slug:"/server/installation",permalink:"/docs/server/installation",editUrl:"https://github.com/dooboolab/hackatalk/tree/main/website/docs/server/installation.md",version:"current",frontMatter:{id:"installation",title:"Installation",sidebar_label:"Installation"},sidebar:"docs",previous:{title:"Overview",permalink:"/docs/server/overview"},next:{title:"Channel",permalink:"/docs/server/channel"}},s=[{value:"Local installation",id:"local-installation",children:[]}],m={toc:s};function c(e){var t=e.components,a=(0,r.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Server project belongs to seperate directory ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/dooboolab/hackatalk/tree/main/server"},"server"),", in ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/dooboolab/hackatalk"},"github"),"."),(0,o.kt)("p",null,"We are using ",(0,o.kt)("a",{parentName:"p",href:"https://www.prisma.io"},"Prisma")," and ",(0,o.kt)("a",{parentName:"p",href:"https://nexus.js.org/docs/nexus-prisma"},"Nexus")," to serve our resolvers to clients."),(0,o.kt)("h3",{id:"local-installation"},"Local installation"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Install your packages in ",(0,o.kt)("inlineCode",{parentName:"p"},"server")," directory."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"yarn\n")),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Note that we recommend using yarn because all of our team members do."),(0,o.kt)("li",{parentName:"ul"},"Also note that ",(0,o.kt)("inlineCode",{parentName:"li"},"yarn.lock")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"package-lock.json")," sometimes make collision. Try to delete one of them."))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Configure ",(0,o.kt)("a",{parentName:"p",href:"https://www.google.com/search?q=postgresql&rlz=1C5CHFA_enKR865KR867&oq=postgresql&aqs=chrome.0.69i59j35i39j0l3j69i60j69i61l2.3220j0j7&sourceid=chrome&ie=UTF-8"},"postgresql")," database. Although ",(0,o.kt)("a",{parentName:"p",href:"https://prisma.io"},"Prisma")," works on many other databases, we recommend using ",(0,o.kt)("inlineCode",{parentName:"p"},"postgres")," since we are using this in our live server. Also ",(0,o.kt)("inlineCode",{parentName:"p"},"postgres")," is the primarily supported database in ",(0,o.kt)("inlineCode",{parentName:"p"},"Prisma"),"."),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Sample installation for Ubuntu user"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"sudo apt install postgresql\n"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Sample installation for Mac user"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"~ brew services start postgresql\n"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Example for changing password for user ",(0,o.kt)("inlineCode",{parentName:"p"},"postgres")),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"sudo su - postgres\npsql\nalter user postgres with password 'your_password';\n"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Example for creating new database user"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"~ createuser --interactive --pwprompt\nEnter name of role to add: postgres\nEnter password for new role: \nEnter it again: \nShall the new role be a superuser? (y/n) y\n"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Example for creating new database"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"psql -U postgres -h localhost -W\nPassword: \n\npostgres=# createdb hackatalk\n"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Connect to database using ",(0,o.kt)("a",{parentName:"p",href:"https://www.pgcli.com"},"pgcli")),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"PGPASSWORD=dooboolab0! pgcli -h localhost -U postgres\n"))))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Setup environment"),(0,o.kt)("ol",{parentName:"li"},(0,o.kt)("li",{parentName:"ol"},"Setup your own local ",(0,o.kt)("inlineCode",{parentName:"li"},"environment")," in your machine.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Copy ",(0,o.kt)("inlineCode",{parentName:"li"},"dotenv/test.env")," to ",(0,o.kt)("inlineCode",{parentName:"li"},"dotenv/.env"),".",(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"cp dotenv/test.env dotenv/.env\n"))),(0,o.kt)("li",{parentName:"ul"},"Include ",(0,o.kt)("inlineCode",{parentName:"li"},"DATABASE_URL")," (* necessary field)",(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},'DATABASE_URL="postgresql://<user>:<password>@<url>:5432/<database>"\n')),(0,o.kt)("blockquote",{parentName:"li"},(0,o.kt)("p",{parentName:"blockquote"},"Note that you should change appropriate values in ",(0,o.kt)("inlineCode",{parentName:"p"},"user"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"password"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"url"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"database"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"scheme")," fields. Or you can even use other databases. More about ",(0,o.kt)("a",{parentName:"p",href:"https://www.prisma.io/docs/reference/database-connectors/connection-urls"},"connection urls")))),(0,o.kt)("li",{parentName:"ul"},"Then run ",(0,o.kt)("inlineCode",{parentName:"li"},"yarn start")," to start server with your local environment."))),(0,o.kt)("li",{parentName:"ol"},"Include ",(0,o.kt)("inlineCode",{parentName:"li"},"test")," environment locally to test queries in your database. This should be included when writing a test code.",(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"$ psql -U postgres -h localhost -W\npostgres=> CREATE DATABASE test;\npostgres=> \\connect test\ntest=>\n")),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Above should match ",(0,o.kt)("inlineCode",{parentName:"li"},"test.env"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},'DATABASE_URL="postgresql://postgres:dooboolab0!@localhost:5432/test"\n'))))))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Sync your local database with ",(0,o.kt)("inlineCode",{parentName:"p"},"Prisma"),"."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"yarn migrate:deploy\n")),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Above command will follow ",(0,o.kt)("inlineCode",{parentName:"li"},"dotenv/.env")," environment."),(0,o.kt)("li",{parentName:"ul"},"If ",(0,o.kt)("inlineCode",{parentName:"li"},"Prisma")," script does not create your ",(0,o.kt)("inlineCode",{parentName:"li"},"database")," or ",(0,o.kt)("inlineCode",{parentName:"li"},"schema")," automatically, create them manually then try again."))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Generate Prisma Client and Nexus"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"yarn generate\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Migration (Usually during development)"),(0,o.kt)("ol",{parentName:"li"},(0,o.kt)("li",{parentName:"ol"},"Change models in ",(0,o.kt)("inlineCode",{parentName:"li"},"./prisma/schema.prisma"),"."),(0,o.kt)("li",{parentName:"ol"},"Run ",(0,o.kt)("inlineCode",{parentName:"li"},"migration:dev")," to see if migration does not fail in your database.",(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"yarn migrate:dev\n")),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"This ",(0,o.kt)("a",{parentName:"li",href:"https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-migrate#prisma-migrate"},"migration process")," generates below file.",(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"migrations/\n\u2514\u2500 20200724010758-migration_name/\n   \u2514\u2500 migration.sql\n"))))),(0,o.kt)("li",{parentName:"ol"},"Running ",(0,o.kt)("inlineCode",{parentName:"li"},"migration:deploy")," will finish migrating your database.",(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"yarn migrate:deploy\n")))))))}c.isMDXComponent=!0}}]);