"use strict";(self.webpackChunkhackatalk_website=self.webpackChunkhackatalk_website||[]).push([[53],{1109:function(e){e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docs":[{"type":"category","label":"Implementation","items":[{"type":"link","label":"Stack Share","href":"/docs/implementation/stackshare","docId":"implementation/stackshare"},{"type":"link","label":"Design","href":"/docs/implementation/design","docId":"implementation/design"},{"type":"link","label":"Authentication","href":"/docs/implementation/authentication","docId":"implementation/authentication"},{"type":"link","label":"Features","href":"/docs/implementation/features","docId":"implementation/features"},{"type":"link","label":"Pagination","href":"/docs/implementation/pagination","docId":"implementation/pagination"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Server","items":[{"type":"link","label":"Overview","href":"/docs/server/overview","docId":"server/overview"},{"type":"link","label":"Installation","href":"/docs/server/installation","docId":"server/installation"},{"type":"link","label":"Channel","href":"/docs/server/channel","docId":"server/channel"},{"type":"link","label":"Membership","href":"/docs/server/membership","docId":"server/membership"},{"type":"link","label":"Message","href":"/docs/server/message","docId":"server/message"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Client","items":[{"type":"link","label":"Overview","href":"/docs/client/overview","docId":"client/overview"},{"type":"link","label":"Installation","href":"/docs/client/installation","docId":"client/installation"},{"type":"link","label":"Components","href":"/docs/client/components","docId":"client/components"},{"type":"link","label":"Integrate with backend","href":"/docs/client/integrate-with-backend","docId":"client/integrate-with-backend"},{"type":"link","label":"Search users","href":"/docs/client/search-users","docId":"client/search-users"},{"type":"link","label":"Direct messaging","href":"/docs/client/direct-messaging","docId":"client/direct-messaging"}],"collapsed":true,"collapsible":true}]},"docs":{"client/components":{"id":"client/components","title":"Components","description":"Creating components","sidebar":"docs"},"client/direct-messaging":{"id":"client/direct-messaging","title":"Direct messaging","description":"If we want to chat with the user from the pop-up modal shown above,  you might find trouble when thinking of the message screen shown below. This is because you will come up with the scenario of revealing the Message screen in two different cases.","sidebar":"docs"},"client/installation":{"id":"client/installation","title":"Installation","description":"Server installation","sidebar":"docs"},"client/integrate-with-backend":{"id":"client/integrate-with-backend","title":"Integrate with backend","description":"Graphql Client","sidebar":"docs"},"client/overview":{"id":"client/overview","title":"Overview","description":"Diagrams","sidebar":"docs"},"client/search-users":{"id":"client/search-users","title":"Search Users","description":"SearchUser screen","sidebar":"docs"},"implementation/authentication":{"id":"implementation/authentication","title":"Authentication","description":"We mainly use json web token to verify our user. This is very efficient in handling multi-device(phone, tablet, pc) users.","sidebar":"docs"},"implementation/design":{"id":"implementation/design","title":"Design","description":"Our design is opened to every in the world. This work is done in Figma by the wonderful designer Megun Kim.","sidebar":"docs"},"implementation/features":{"id":"implementation/features","title":"Features","description":"Features mainly describes what services we provide to HackaTalk users. We generally provide one-to-one as well as group chats. We would like to provide and try out things that can be done with a modern chat app.","sidebar":"docs"},"implementation/pagination":{"id":"implementation/pagination","title":"Pagination","description":"One of the challenges when using graphql is pagination. Facebook\'s relay cursor pagination seems currently the best solution on implementing infinite scroll view which we normally see in many mobile apps.","sidebar":"docs"},"implementation/stackshare":{"id":"implementation/stackshare","title":"Stack Share","description":"Our developement stacks are introduced in client and server seperately.","sidebar":"docs"},"server/channel":{"id":"server/channel","title":"Channel","description":"This page explains how the Channels in Hackatalk are structured and was created with the purpose of helping our contributors understand Hackatalk\'s data structure.","sidebar":"docs"},"server/installation":{"id":"server/installation","title":"Installation","description":"Server project belongs to seperate directory server, in github.","sidebar":"docs"},"server/membership":{"id":"server/membership","title":"Membership","description":"As described in Channel, Membership model is a single table inheritance. Only one member(user) in the channel will have the authorization to grant other user\'s permission to the Channel. This member will be referred to as the owner.","sidebar":"docs"},"server/message":{"id":"server/message","title":"Message","description":"Creating a message is pretty straightforward as long as you know the id of the channel you wish to send the message to.","sidebar":"docs"},"server/overview":{"id":"server/overview","title":"Overview","description":"Prerequisite","sidebar":"docs"}}}')}}]);