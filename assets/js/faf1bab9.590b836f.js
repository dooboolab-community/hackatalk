"use strict";(self.webpackChunkhackatalk_website=self.webpackChunkhackatalk_website||[]).push([[437],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=s(n),f=a,g=m["".concat(p,".").concat(f)]||m[f]||u[f]||i;return n?r.createElement(g,o(o({ref:t},c),{},{components:n})):r.createElement(g,o({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5994:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return p},default:function(){return f},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return u}});var r=n(3117),a=n(102),i=(n(7294),n(3905)),o=["components"],l={id:"pagination",title:"Pagination",sidebar_label:"Pagination"},p=void 0,s={unversionedId:"implementation/pagination",id:"implementation/pagination",title:"Pagination",description:"One of the challenges when using graphql is pagination. Facebook's relay cursor pagination seems currently the best solution on implementing infinite scroll view which we normally see in many mobile apps.",source:"@site/docs/implementation/pagination.md",sourceDirName:"implementation",slug:"/implementation/pagination",permalink:"/docs/implementation/pagination",draft:!1,editUrl:"https://github.com/dooboolab/hackatalk/tree/main/website/docs/implementation/pagination.md",tags:[],version:"current",frontMatter:{id:"pagination",title:"Pagination",sidebar_label:"Pagination"},sidebar:"docs",previous:{title:"Features",permalink:"/docs/implementation/features"},next:{title:"Overview",permalink:"/docs/server/overview"}},c={},u=[{value:"Server",id:"server",level:3},{value:"Client",id:"client",level:3}],m={toc:u};function f(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"One of the challenges when using graphql is ",(0,i.kt)("a",{parentName:"p",href:"https://graphql.org/learn/pagination"},"pagination"),". Facebook's ",(0,i.kt)("a",{parentName:"p",href:"https://relay.dev/graphql/connections.htm"},"relay cursor pagination")," seems currently the best solution on implementing ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/pronebird/UIScrollView-InfiniteScroll"},"infinite scroll view")," which we normally see in many mobile apps."),(0,i.kt)("img",{src:"https://user-images.githubusercontent.com/27461460/89128314-dad82900-d52f-11ea-86b4-0b54dbba2860.png",width:"400"}),(0,i.kt)("p",null,"Although it has some limitations when we face offset pagination scenario as above, ",(0,i.kt)("inlineCode",{parentName:"p"},"relay cursor pagination")," is currently the most ideal way to support mobile's infinite scrollview."),(0,i.kt)("h3",{id:"server"},"Server"),(0,i.kt)("p",null,"Previously, implementing ",(0,i.kt)("inlineCode",{parentName:"p"},"relay-cursor-pagination")," with orm like ",(0,i.kt)("a",{parentName:"p",href:"https://sequelize.org"},"sequelize")," was a bit complicated. Here's how we've it done in ",(0,i.kt)("a",{parentName:"p",href:"https://medium.com/graphql-seoul/graphql-pagination-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0-relays-cursor-based-connection-pattern-72ab0daceed4"},"medium post")," previously."),(0,i.kt)("p",null,"However, we've migrated to ",(0,i.kt)("a",{parentName:"p",href:"prisma.io"},"primsa2")," and ",(0,i.kt)("a",{parentName:"p",href:"https://www.nexusjs.org"},"nexus")," so this becomes much easier. ",(0,i.kt)("inlineCode",{parentName:"p"},"Nexus")," even supports ",(0,i.kt)("a",{parentName:"p",href:"https://nexusjs.org/components-standalone/schema/plugins/connection#connection-plugin"},"connection plugin")," and we'll be using it in our server."),(0,i.kt)("h3",{id:"client"},"Client"),(0,i.kt)("p",null,"In client, we use ",(0,i.kt)("a",{parentName:"p",href:"https://relay.dev"},"relay"),". There is a great explanation on using ",(0,i.kt)("a",{parentName:"p",href:"https://www.howtographql.com/react-relay/8-pagination"},"relay pagination")," in ",(0,i.kt)("a",{parentName:"p",href:"https://reactjs.org"},"react"),"."))}f.isMDXComponent=!0}}]);