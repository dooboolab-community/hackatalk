// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`[MessageListItem] rendering test renders [peerMessage] as expected 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    shouldShowDatePeer={true}
    style={
      [
        {
          "alignItems": "flex-start",
          "flexDirection": "row",
          "justifyContent": "flex-start",
          "marginLeft": 20,
          "marginRight": 8,
          "marginTop": 8,
          "minHeight": 48,
          "width": "100%",
        },
        undefined,
      ]
    }
  >
    <View
      style={
        {
          "marginRight": 8,
          "width": 40,
        }
      }
    >
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "opacity": 1,
          }
        }
        testID="chat-list-item0"
      >
        <Image
          accessibilityHint="sender image"
          accessible={true}
          source={
            {
              "uri": "https://example.com/profile.jpg",
            }
          }
          style={
            [
              {
                "borderBottomLeftRadius": 16,
                "borderBottomRightRadius": 16,
                "borderTopLeftRadius": 16,
                "borderTopRightRadius": 16,
                "height": 32,
                "width": 32,
              },
              undefined,
            ]
          }
        />
      </View>
    </View>
    <View
      style={
        {
          "flexDirection": "column",
          "maxWidth": "80%",
        }
      }
    >
      <Text
        style={
          [
            {
              "color": "white",
              "fontSize": 12,
              "marginBottom": 2,
            },
            undefined,
          ]
        }
      >
        alice
      </Text>
      <View
        style={
          {
            "flexDirection": "row",
            "justifyContent": "flex-start",
          }
        }
      >
        <View
          style={
            [
              {
                "backgroundColor": "#E2F2FF",
                "marginRight": 8,
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
              },
              undefined,
            ]
          }
        >
          <Text
            selectable={true}
            style={
              [
                {
                  "color": "black",
                  "fontSize": 14,
                },
                undefined,
              ]
            }
          >
            <Text>
              <Text
                style={
                  [
                    undefined,
                    undefined,
                  ]
                }
              >
                Hello there!
              </Text>
            </Text>
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;
