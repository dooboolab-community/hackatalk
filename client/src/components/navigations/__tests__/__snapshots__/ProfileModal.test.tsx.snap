// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`[ProfileModal] rendering test Render without crashing 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View>
    <View
      accessibilityViewIsModal={true}
      importantForAccessibility="yes"
      pointerEvents="box-none"
      style={
        [
          {
            "backgroundColor": "rgba(0,0,0,0)",
            "zIndex": 2,
          },
          {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
        ]
      }
    >
      <View
        onLayout={[Function]}
        pointerEvents="box-none"
        style={
          {
            "flex": 1,
          }
        }
      >
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          importantForAccessibility="no"
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "bottom": 0,
              "left": 0,
              "opacity": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            style={
              [
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "backgroundColor": "black",
                  "opacity": 0.075,
                },
              ]
            }
          />
        </View>
        <View
          collapsable={false}
          onLayout={[Function]}
          onMoveShouldSetResponder={[Function]}
          onMoveShouldSetResponderCapture={[Function]}
          onResponderEnd={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderReject={[Function]}
          onResponderRelease={[Function]}
          onResponderStart={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onStartShouldSetResponderCapture={[Function]}
          style={
            {
              "alignContent": "center",
              "alignItems": "center",
              "alignSelf": "stretch",
              "backgroundColor": "white",
              "height": "40%",
              "justifyContent": "center",
              "maxHeight": 320,
              "maxWidth": 480,
              "transform": [
                {
                  "translateY": -1334,
                },
                {
                  "translateX": 0,
                },
              ],
              "width": "90%",
            }
          }
        >
          <View
            onLayout={[Function]}
            style={
              {
                "alignItems": "center",
                "alignSelf": "stretch",
                "backgroundColor": "#000",
                "flex": 1,
                "justifyContent": "space-between",
              }
            }
            testID="container"
          >
            <View
              style={
                {
                  "flexDirection": "row",
                  "position": "absolute",
                  "right": 8,
                  "top": 4,
                }
              }
            >
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
                testID="touch-done"
              >
                <View
                  style={
                    {
                      "paddingLeft": 8,
                      "paddingRight": 12,
                      "paddingVertical": 8,
                    }
                  }
                >
                  <Text />
                </View>
              </View>
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
                testID="touch-done"
              >
                <View
                  style={
                    {
                      "paddingLeft": 8,
                      "paddingRight": 16,
                      "paddingVertical": 8,
                    }
                  }
                >
                  <Text />
                </View>
              </View>
            </View>
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  [
                    {
                      "marginTop": 64,
                    },
                    undefined,
                  ]
                }
              >
                <Image
                  source={
                    {
                      "uri": "<mock-value-for-field-"photoURL">",
                    }
                  }
                  style={
                    [
                      {
                        "borderBottomLeftRadius": 40,
                        "borderBottomRightRadius": 40,
                        "borderTopLeftRadius": 40,
                        "borderTopRightRadius": 40,
                        "height": 80,
                        "width": 80,
                      },
                      {
                        "alignSelf": "center",
                      },
                    ]
                  }
                />
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "alignSelf": "center",
                        "color": "white",
                        "fontSize": 24,
                        "fontWeight": "bold",
                        "marginTop": 16,
                        "paddingBottom": 0,
                        "paddingLeft": 32,
                        "paddingRight": 32,
                        "paddingTop": 0,
                      },
                      undefined,
                    ]
                  }
                >
                  &lt;mock-value-for-field-"nickname"&gt;
                </Text>
              </View>
            </View>
            <View
              style={
                [
                  {
                    "alignItems": "center",
                    "alignSelf": "stretch",
                    "backgroundColor": "#151C22",
                    "flexDirection": "row",
                    "height": 48,
                    "justifyContent": "space-between",
                  },
                  undefined,
                ]
              }
            >
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "opacity": 1,
                    "width": "50%",
                  }
                }
                testID="touch-add-friend"
              >
                <Text
                  style={
                    [
                      {
                        "color": "white",
                        "fontSize": 16,
                      },
                      undefined,
                    ]
                  }
                  testID="text-add-title"
                >
                  Add
                </Text>
              </View>
              <View
                style={
                  [
                    {
                      "backgroundColor": "#6D6D6D",
                      "height": 48,
                      "width": 0.5,
                    },
                    undefined,
                  ]
                }
              />
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "opacity": 1,
                    "width": "50%",
                  }
                }
                testID="btn-chat"
              >
                <Text
                  style={
                    [
                      {
                        "color": "white",
                        "fontSize": 16,
                      },
                      {
                        "color": "#fff",
                      },
                    ]
                  }
                >
                  Chat
                </Text>
              </View>
            </View>
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "backgroundColor": "black",
                "height": -48,
                "opacity": 0,
                "position": "absolute",
                "top": 0,
                "width": 0,
                "zIndex": 1,
              }
            }
            testID="view-statusMessageView"
          />
          <View
            collapsable={false}
            onLayout={[Function]}
            style={
              {
                "backgroundColor": "transparent",
                "overflow": "hidden",
                "position": "absolute",
                "top": 0,
                "transform": [
                  {
                    "translateY": 140,
                  },
                ],
                "width": 200,
                "zIndex": 100,
              }
            }
            testID="view-animated"
          >
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "column",
                  "justifyContent": "center",
                  "opacity": 1,
                }
              }
              testID="touchable-statusMessageView"
            >
              <Text
                ellipsizeMode="tail"
                isStatusMessageExpanded={false}
                numberOfLines={2}
                onTextLayout={[Function]}
                style={
                  [
                    {
                      "alignSelf": "center",
                      "color": "white",
                      "fontSize": 12,
                      "fontWeight": "normal",
                      "textAlign": "center",
                    },
                    undefined,
                  ]
                }
                testID="text-main"
              >
                &lt;mock-value-for-field-"statusMessage"&gt;
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;
