// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`[Channel] screen renders without crashing 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "backgroundColor": "#ffffff",
        "flexBasis": 0,
        "flexDirection": "column",
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
      },
    ]
  }
>
  <RCTScrollView
    ListEmptyComponent={
      <Shared
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "stretch",
            "flex": 1,
            "justifyContent": "center",
            "width": "100%",
          }
        }
      >
        Start a Chat
      </Shared>
    }
    ListFooterComponent={
      <View
        style={
          Object {
            "height": 60,
          }
        }
      />
    }
    contentContainerStyle={null}
    data={
      Array [
        Object {
          "cursor": "<mock-value-for-field-\\"cursor\\">",
          "node": Object {
            "__typename": "Channel",
            "channelType": "private",
            "id": "user-1",
            "lastMessage": Object {
              "createdAt": "<mock-value-for-field-\\"createdAt\\">",
              "fileUrls": "<mock-value-for-field-\\"fileUrls\\">",
              "id": "<Message-mock-id-2>",
              "imageUrls": "<mock-value-for-field-\\"imageUrls\\">",
              "messageType": "<mock-value-for-field-\\"messageType\\">",
              "text": "<mock-value-for-field-\\"text\\">",
            },
            "memberships": Array [
              Object {
                "user": Object {
                  "name": "<mock-value-for-field-\\"name\\">",
                  "nickname": "<mock-value-for-field-\\"nickname\\">",
                  "photoURL": "<mock-value-for-field-\\"photoURL\\">",
                  "thumbURL": "<mock-value-for-field-\\"thumbURL\\">",
                },
              },
            ],
            "name": "HackaTalk",
          },
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    onContentSizeChange={[Function]}
    onEndReached={[Function]}
    onEndReachedThreshold={0.1}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onRefresh={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    refreshControl={
      <RefreshControlMock
        onRefresh={[Function]}
        refreshing={false}
      />
    }
    refreshing={false}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "alignSelf": "stretch",
      }
    }
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <RCTRefreshControl />
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "width": "100%",
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="list-item-0"
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#ffffff",
                    "borderBottomWidth": 1,
                    "borderColor": "rgb(229, 229, 229)",
                    "flexDirection": "row",
                    "height": 92,
                    "justifyContent": "space-between",
                  },
                ]
              }
            >
              <View
                style={
                  Object {
                    "marginHorizontal": 20,
                  }
                }
              >
                <Image
                  source={
                    Object {
                      "uri": "<mock-value-for-field-\\"thumbURL\\">",
                    }
                  }
                  style={
                    Array [
                      Object {
                        "borderRadius": 20,
                        "height": 40,
                        "width": 40,
                      },
                    ]
                  }
                />
                <View />
              </View>
              <View
                style={
                  Array [
                    Object {
                      "flexBasis": 0,
                      "flexDirection": "column",
                      "flexGrow": 1,
                      "flexShrink": 1,
                      "paddingRight": 20,
                    },
                  ]
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "space-between",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#151A25",
                          "fontSize": 14,
                          "fontWeight": "bold",
                        },
                      ]
                    }
                  >
                    &lt;mock-value-for-field-"nickname"&gt;
                  </Text>
                </View>
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "space-between",
                        "marginTop": 8,
                      },
                    ]
                  }
                >
                  <Text
                    lastMessageCnt={0}
                    numberOfLines={2}
                    style={
                      Array [
                        Object {
                          "color": "#151A25",
                          "fontSize": 12,
                          "maxWidth": 150,
                        },
                      ]
                    }
                  >
                    &lt;mock-value-for-field-"text"&gt;
                  </Text>
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#1E6EFA",
                          "fontSize": 12,
                          "textAlign": "right",
                        },
                      ]
                    }
                  >
                    Invalid date
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
      >
        <View
          style={
            Object {
              "height": 60,
            }
          }
        />
      </View>
    </View>
  </RCTScrollView>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "bottom": 44,
        "opacity": 1,
        "position": "absolute",
        "right": 20,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#1E6EFA",
            "borderRadius": 28,
            "height": 56,
            "justifyContent": "center",
            "width": 56,
          },
        ]
      }
    >
      <SvgMock
        fill="#ffffff"
      />
    </View>
  </View>
</View>
`;
