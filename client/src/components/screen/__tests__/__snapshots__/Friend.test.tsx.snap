// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`[Friend] rendering test renders as expected 1`] = `
<View
  collapsable={true}
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#ffffff",
          "flexBasis": 0,
          "flexDirection": "column",
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <ScrollView
      ListEmptyComponent={
        <Shared
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "stretch",
              "flex": 1,
              "justifyContent": "center",
              "width": "100%",
            }
          }
        >
          No content
        </Shared>
      }
      contentContainerStyle={
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        }
      }
      disableVirtualization={false}
      horizontal={false}
      initialNumToRender={10}
      maxToRenderPerBatch={10}
      onEndReachedThreshold={2}
      removeClippedSubviews={false}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      style={
        Object {
          "alignSelf": "stretch",
        }
      }
      testID="friend-list"
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "stretch",
            "flex": 1,
            "justifyContent": "center",
            "width": "100%",
          }
        }
      >
        <Text
          style={
            Object {
              "alignSelf": "center",
              "color": "rgb(155,155,155)",
              "fontSize": 14,
            }
          }
        >
          No content
        </Text>
      </View>
    </ScrollView>
  </View>
</View>
`;

exports[`[Friend] rendering test renders error view 1`] = `
<View
  collapsable={true}
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#ffffff",
          "flexBasis": 0,
          "flexDirection": "column",
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <ScrollView
      ListEmptyComponent={
        <Shared
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "stretch",
              "flex": 1,
              "justifyContent": "center",
              "width": "100%",
            }
          }
        >
          No content
        </Shared>
      }
      contentContainerStyle={
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        }
      }
      disableVirtualization={false}
      horizontal={false}
      initialNumToRender={10}
      maxToRenderPerBatch={10}
      onEndReachedThreshold={2}
      removeClippedSubviews={false}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      style={
        Object {
          "alignSelf": "stretch",
        }
      }
      testID="friend-list"
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "stretch",
            "flex": 1,
            "justifyContent": "center",
            "width": "100%",
          }
        }
      >
        <Text
          style={
            Object {
              "alignSelf": "center",
              "color": "rgb(155,155,155)",
              "fontSize": 14,
            }
          }
        >
          No content
        </Text>
      </View>
    </ScrollView>
  </View>
</View>
`;

exports[`[Friend] rendering test renders loading 1`] = `
<View
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    collapsable={true}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#ffffff",
            "flexBasis": 0,
            "flexDirection": "column",
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
          },
        ]
      }
    >
      <ScrollView
        ListEmptyComponent={
          <Shared
            style={
              Object {
                "alignItems": "center",
                "alignSelf": "stretch",
                "flex": 1,
                "justifyContent": "center",
                "width": "100%",
              }
            }
          >
            No content
          </Shared>
        }
        contentContainerStyle={
          Object {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
          }
        }
        disableVirtualization={false}
        horizontal={false}
        initialNumToRender={10}
        maxToRenderPerBatch={10}
        onEndReachedThreshold={2}
        removeClippedSubviews={false}
        scrollEventThrottle={50}
        stickyHeaderIndices={Array []}
        style={
          Object {
            "alignSelf": "stretch",
          }
        }
        testID="friend-list"
        updateCellsBatchingPeriod={50}
        viewabilityConfigCallbackPairs={Array []}
        windowSize={21}
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "stretch",
              "flex": 1,
              "justifyContent": "center",
              "width": "100%",
            }
          }
        >
          <Text
            style={
              Object {
                "alignSelf": "center",
                "color": "rgb(155,155,155)",
                "fontSize": 14,
              }
            }
          >
            No content
          </Text>
        </View>
      </ScrollView>
    </View>
  </View>
</View>
`;
