// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`[Friend] rendering test renders a friend 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "backgroundColor": "#ffffff",
        "flexBasis": 0,
        "flexDirection": "column",
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
      },
    ]
  }
>
  <RCTScrollView
    ListEmptyComponent={
      <Shared
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "stretch",
            "flex": 1,
            "justifyContent": "center",
            "width": "100%",
          }
        }
      >
        No added friends
      </Shared>
    }
    data={
      Array [
        Object {
          "cursor": "<mock-value-for-field-\\"cursor\\">",
          "node": Object {
            "__typename": "User",
            "birthday": "<mock-value-for-field-\\"birthday\\">",
            "createdAt": "<mock-value-for-field-\\"createdAt\\">",
            "deletedAt": "<mock-value-for-field-\\"deletedAt\\">",
            "email": "<mock-value-for-field-\\"email\\">",
            "gender": "<mock-value-for-field-\\"gender\\">",
            "id": "user-1",
            "isOnline": "<mock-value-for-field-\\"isOnline\\">",
            "lastSignedIn": "<mock-value-for-field-\\"lastSignedIn\\">",
            "name": "John Doe",
            "nickname": "jdoe1234",
            "phone": "<mock-value-for-field-\\"phone\\">",
            "photoURL": "<mock-value-for-field-\\"photoURL\\">",
            "statusMessage": "<mock-value-for-field-\\"statusMessage\\">",
            "thumbURL": "<mock-value-for-field-\\"thumbURL\\">",
            "updatedAt": "<mock-value-for-field-\\"updatedAt\\">",
            "verified": "<mock-value-for-field-\\"verified\\">",
          },
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    onContentSizeChange={[Function]}
    onEndReached={[Function]}
    onEndReachedThreshold={0.1}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onRefresh={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    refreshControl={
      <RefreshControlMock
        onRefresh={[Function]}
        refreshing={false}
      />
    }
    refreshing={false}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "alignSelf": "stretch",
      }
    }
    testID="friend-list"
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <RCTRefreshControl />
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Array [
              Object {
                "width": "100%",
              },
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="user-id-0"
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#ffffff",
                    "borderBottomWidth": 1,
                    "borderColor": "#e2f2ff",
                    "flexDirection": "row",
                    "height": 80,
                    "justifyContent": "flex-start",
                    "paddingBottom": 0,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 0,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "height": 40,
                      "justifyContent": "center",
                      "width": 40,
                    },
                  ]
                }
              >
                <Image
                  source={
                    Object {
                      "uri": "<mock-value-for-field-\\"photoURL\\">",
                    }
                  }
                  style={
                    Array [
                      Object {
                        "borderRadius": 20,
                        "height": 40,
                        "width": 40,
                      },
                    ]
                  }
                />
                <View
                  style={
                    Array [
                      Object {
                        "borderRadius": 25,
                        "height": 12,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                        "width": 12,
                      },
                      Object {
                        "backgroundColor": "#00D4AB",
                      },
                    ]
                  }
                />
              </View>
              <Text
                numberOfLines={1}
                style={
                  Array [
                    Object {
                      "color": "#151A25",
                      "fontSize": 14,
                      "fontWeight": "bold",
                      "marginLeft": 12,
                      "width": 200,
                    },
                  ]
                }
              >
                John Doe
              </Text>
              <Text
                style={
                  Array [
                    Object {
                      "borderColor": "#d3d8e8",
                      "borderWidth": 0.3,
                      "color": "#1E6EFA",
                      "fontSize": 12,
                      "maxWidth": 120,
                      "paddingBottom": 4,
                      "paddingLeft": 8,
                      "paddingRight": 8,
                      "paddingTop": 4,
                      "position": "absolute",
                      "right": 20,
                    },
                  ]
                }
              >
                &lt;mock-value-for-field-"statusMessage"&gt;
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;
