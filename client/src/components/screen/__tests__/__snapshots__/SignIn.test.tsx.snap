// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`[SignIn] rendering test should render [Dark] mode without crashing 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Array [
      Object {
        "backgroundColor": "#000000",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
      },
    ]
  }
>
  <RCTScrollView
    style={
      Array [
        Object {
          "alignSelf": "center",
          "width": "100%",
        },
      ]
    }
  >
    <View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "left": Object {
              " __value": 0,
            },
            "opacity": 1,
            "position": "absolute",
            "top": Object {
              " __value": 0,
            },
            "transform": Array [
              Object {
                "scale": AnimatedValue {
                  " __value": 0,
                },
              },
            ],
            "zIndex": 15,
          }
        }
        testID="theme-test"
      >
        <Image
          source={
            Object {
              "canInstrument": true,
              "createTransformer": [Function],
              "getCacheKey": [Function],
              "process": [Function],
            }
          }
          style={
            Object {
              "height": 80,
              "resizeMode": "cover",
              "width": 80,
            }
          }
        />
      </View>
      <View
        style={
          Array [
            Object {
              "marginBottom": 40,
              "marginLeft": 40,
              "marginRight": 40,
              "marginTop": 40,
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "marginBottom": 72,
                "marginTop": 44,
              },
            ]
          }
        >
          <View
            style={
              Object {
                "height": 72,
              }
            }
          />
          <Text
            style={
              Array [
                Object {
                  "alignSelf": "flex-start",
                  "color": "#ffffff",
                  "fontSize": 20,
                  "fontWeight": "bold",
                  "marginLeft": 6,
                },
              ]
            }
          >
            Hello
          </Text>
        </View>
        <View
          style={
            Array [
              Object {
                "alignSelf": "stretch",
                "flexDirection": "column",
              },
              Object {
                "marginBottom": 20,
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "width": "100%",
                },
                Object {
                  "borderBottomWidth": 0.6,
                  "borderColor": "#FFFFFF",
                },
                undefined,
                false,
                undefined,
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#b9b9c4",
                    "fontSize": 14,
                    "fontWeight": "bold",
                  },
                  undefined,
                  false,
                  Object {
                    "width": 110,
                  },
                ]
              }
            >
              Email
            </Text>
            <TextInput
              allowFontScaling={true}
              autoCapitalize="none"
              multiline={false}
              onBlur={[Function]}
              onChangeText={[Function]}
              onFocus={[Function]}
              onSubmitEditing={[Function]}
              placeholder="hello@example.com"
              placeholderTextColor="#8f94a3"
              rejectResponderTermination={true}
              style={
                Array [
                  Object {
                    "color": "#2c374e",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "flexShrink": 1,
                    "fontSize": 14,
                    "fontWeight": "bold",
                    "height": "100%",
                    "paddingBottom": 16,
                    "paddingTop": 16,
                  },
                  Object {
                    "color": "#ffffff",
                  },
                  Object {
                    "textAlign": "left",
                  },
                ]
              }
              testID="input-email"
              underlineColorAndroid="transparent"
              value=""
            />
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "alignSelf": "stretch",
                "flexDirection": "column",
              },
              Object {
                "marginBottom": 20,
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "width": "100%",
                },
                Object {
                  "borderBottomWidth": 0.6,
                  "borderColor": "#FFFFFF",
                },
                undefined,
                false,
                undefined,
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#b9b9c4",
                    "fontSize": 14,
                    "fontWeight": "bold",
                  },
                  undefined,
                  false,
                  Object {
                    "width": 110,
                  },
                ]
              }
            >
              Password
            </Text>
            <TextInput
              allowFontScaling={true}
              autoCapitalize="none"
              multiline={false}
              onBlur={[Function]}
              onChangeText={[Function]}
              onFocus={[Function]}
              onSubmitEditing={[Function]}
              placeholder="******"
              placeholderTextColor="#8f94a3"
              rejectResponderTermination={true}
              secureTextEntry={true}
              style={
                Array [
                  Object {
                    "color": "#2c374e",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "flexShrink": 1,
                    "fontSize": 14,
                    "fontWeight": "bold",
                    "height": "100%",
                    "paddingBottom": 16,
                    "paddingTop": 16,
                  },
                  Object {
                    "color": "#ffffff",
                  },
                  Object {
                    "textAlign": "left",
                  },
                ]
              }
              testID="input-password"
              underlineColorAndroid="transparent"
              value=""
            />
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "flexDirection": "row",
                "marginTop": 12,
                "width": "100%",
              },
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#151A25",
                "borderColor": "#8bc9ff",
                "borderRadius": 0,
                "borderWidth": 1,
                "opacity": 1,
                "width": "100%",
              }
            }
            testID="btn-sign-up"
          />
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#8bc9ff",
                "borderRadius": 0,
                "opacity": 1,
                "width": "100%",
              }
            }
            testID="btn-sign-in"
          />
        </View>
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignSelf": "center",
              "marginBottom": 44,
              "opacity": 1,
              "paddingBottom": 20,
              "paddingLeft": 20,
              "paddingRight": 20,
              "paddingTop": 20,
            }
          }
          testID="btn-find-pw"
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#e2f2ff",
                  "textDecorationLine": "underline",
                },
              ]
            }
          >
            Forgot password?
          </Text>
        </View>
        <View
          style={
            Array [
              Object {
                "marginBottom": 24,
              },
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#ffffff",
                "borderColor": "#151E22",
                "borderRadius": 100,
                "borderWidth": 1,
                "height": 48,
                "marginBottom": 12,
                "opacity": 1,
                "width": "100%",
              }
            }
            testID="btn-apple"
          />
          <test
            clientId="xxxx"
            clientSecret="xxxx"
            onUserCreated={[Function]}
            socialProvider="facebook"
            svgIcon={
              <SvgMock
                fill="#345997"
                height={18}
                width={18}
              />
            }
          />
          <test
            clientId="xxxx"
            clientSecret="xxxx"
            onUserCreated={[Function]}
            socialProvider="google"
            svgIcon={
              <SvgMock
                fill="#E04238"
                height={20}
                width={20}
              />
            }
          />
        </View>
        <View
          style={
            Array [
              Object {
                "flexDirection": "row",
                "flexWrap": "wrap",
                "justifyContent": "center",
                "paddingBottom": 40,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 0,
              },
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#777",
                  "lineHeight": 22,
                },
              ]
            }
          >
            We consider that you agree with 
          </Text>
          <Text
            onPress={[Function]}
            style={
              Array [
                Object {
                  "color": "#e2f2ff",
                  "lineHeight": 22,
                  "textDecorationLine": "underline",
                },
              ]
            }
            testID="btn-terms"
          >
            Terms for Agreement
          </Text>
          <Text
            style={
              Array [
                Object {
                  "color": "#777",
                  "lineHeight": 22,
                },
              ]
            }
          >
             and 
          </Text>
          <Text
            onPress={[Function]}
            style={
              Array [
                Object {
                  "color": "#e2f2ff",
                  "lineHeight": 22,
                  "textDecorationLine": "underline",
                },
              ]
            }
            testID="btn-privacy"
          >
            Privacy Policy
          </Text>
          <Text
            style={
              Array [
                Object {
                  "color": "#777",
                  "lineHeight": 22,
                },
              ]
            }
          >
             by going onto next step.
          </Text>
        </View>
      </View>
    </View>
  </RCTScrollView>
</RCTSafeAreaView>
`;

exports[`[SignIn] rendering test should render without crashing 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Array [
      Object {
        "backgroundColor": "#ffffff",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
      },
    ]
  }
>
  <RCTScrollView
    style={
      Array [
        Object {
          "alignSelf": "center",
          "width": "100%",
        },
      ]
    }
  >
    <View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "left": Object {
              " __value": 0,
            },
            "opacity": 1,
            "position": "absolute",
            "top": Object {
              " __value": 0,
            },
            "transform": Array [
              Object {
                "scale": AnimatedValue {
                  " __value": 0,
                },
              },
            ],
            "zIndex": 15,
          }
        }
        testID="theme-test"
      >
        <Image
          source={
            Object {
              "canInstrument": true,
              "createTransformer": [Function],
              "getCacheKey": [Function],
              "process": [Function],
            }
          }
          style={
            Object {
              "height": 80,
              "resizeMode": "cover",
              "width": 80,
            }
          }
        />
      </View>
      <View
        style={
          Array [
            Object {
              "marginBottom": 40,
              "marginLeft": 40,
              "marginRight": 40,
              "marginTop": 40,
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "marginBottom": 72,
                "marginTop": 44,
              },
            ]
          }
        >
          <View
            style={
              Object {
                "height": 72,
              }
            }
          />
          <Text
            style={
              Array [
                Object {
                  "alignSelf": "flex-start",
                  "color": "#151A25",
                  "fontSize": 20,
                  "fontWeight": "bold",
                  "marginLeft": 6,
                },
              ]
            }
          >
            Hello
          </Text>
        </View>
        <View
          style={
            Array [
              Object {
                "alignSelf": "stretch",
                "flexDirection": "column",
              },
              Object {
                "marginBottom": 20,
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "width": "100%",
                },
                Object {
                  "borderBottomWidth": 0.6,
                  "borderColor": "#2E2E2E",
                },
                undefined,
                false,
                undefined,
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#b9b9c4",
                    "fontSize": 14,
                    "fontWeight": "bold",
                  },
                  undefined,
                  false,
                  Object {
                    "width": 110,
                  },
                ]
              }
            >
              Email
            </Text>
            <TextInput
              allowFontScaling={true}
              autoCapitalize="none"
              multiline={false}
              onBlur={[Function]}
              onChangeText={[Function]}
              onFocus={[Function]}
              onSubmitEditing={[Function]}
              placeholder="hello@example.com"
              placeholderTextColor="#676c7a"
              rejectResponderTermination={true}
              style={
                Array [
                  Object {
                    "color": "#2c374e",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "flexShrink": 1,
                    "fontSize": 14,
                    "fontWeight": "bold",
                    "height": "100%",
                    "paddingBottom": 16,
                    "paddingTop": 16,
                  },
                  Object {
                    "color": "#151A25",
                  },
                  Object {
                    "textAlign": "left",
                  },
                ]
              }
              testID="input-email"
              underlineColorAndroid="transparent"
              value=""
            />
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "alignSelf": "stretch",
                "flexDirection": "column",
              },
              Object {
                "marginBottom": 20,
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "width": "100%",
                },
                Object {
                  "borderBottomWidth": 0.6,
                  "borderColor": "#2E2E2E",
                },
                undefined,
                false,
                undefined,
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#b9b9c4",
                    "fontSize": 14,
                    "fontWeight": "bold",
                  },
                  undefined,
                  false,
                  Object {
                    "width": 110,
                  },
                ]
              }
            >
              Password
            </Text>
            <TextInput
              allowFontScaling={true}
              autoCapitalize="none"
              multiline={false}
              onBlur={[Function]}
              onChangeText={[Function]}
              onFocus={[Function]}
              onSubmitEditing={[Function]}
              placeholder="******"
              placeholderTextColor="#676c7a"
              rejectResponderTermination={true}
              secureTextEntry={true}
              style={
                Array [
                  Object {
                    "color": "#2c374e",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "flexShrink": 1,
                    "fontSize": 14,
                    "fontWeight": "bold",
                    "height": "100%",
                    "paddingBottom": 16,
                    "paddingTop": 16,
                  },
                  Object {
                    "color": "#151A25",
                  },
                  Object {
                    "textAlign": "left",
                  },
                ]
              }
              testID="input-password"
              underlineColorAndroid="transparent"
              value=""
            />
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "flexDirection": "row",
                "marginTop": 12,
                "width": "100%",
              },
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#ffffff",
                "borderColor": "#1E6EFA",
                "borderRadius": 0,
                "borderWidth": 1,
                "opacity": 1,
                "width": "100%",
              }
            }
            testID="btn-sign-up"
          />
          <View
            style={
              Object {
                "width": 12,
              }
            }
          />
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#1E6EFA",
                "borderRadius": 0,
                "opacity": 1,
                "width": "100%",
              }
            }
            testID="btn-sign-in"
          />
        </View>
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignSelf": "center",
              "marginBottom": 44,
              "opacity": 1,
              "paddingBottom": 20,
              "paddingLeft": 20,
              "paddingRight": 20,
              "paddingTop": 20,
            }
          }
          testID="btn-find-pw"
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#1E6EFA",
                  "textDecorationLine": "underline",
                },
              ]
            }
          >
            Forgot password?
          </Text>
        </View>
        <View
          style={
            Array [
              Object {
                "marginBottom": 24,
              },
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#ffffff",
                "borderColor": "#151E22",
                "borderRadius": 100,
                "borderWidth": 1,
                "height": 48,
                "marginBottom": 12,
                "opacity": 1,
                "width": "100%",
              }
            }
            testID="btn-apple"
          />
          <test
            clientId="xxxx"
            clientSecret="xxxx"
            onUserCreated={[Function]}
            socialProvider="facebook"
            svgIcon={
              <SvgMock
                fill="#ffffff"
                height={18}
                width={18}
              />
            }
          />
          <test
            clientId="xxxx"
            clientSecret="xxxx"
            onUserCreated={[Function]}
            socialProvider="google"
            svgIcon={
              <SvgMock
                fill="#ffffff"
                height={20}
                width={20}
              />
            }
          />
        </View>
        <View
          style={
            Array [
              Object {
                "flexDirection": "row",
                "flexWrap": "wrap",
                "justifyContent": "center",
                "paddingBottom": 40,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 0,
              },
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#777",
                  "lineHeight": 22,
                },
              ]
            }
          >
            We consider that you agree with 
          </Text>
          <Text
            onPress={[Function]}
            style={
              Array [
                Object {
                  "color": "#1E6EFA",
                  "lineHeight": 22,
                  "textDecorationLine": "underline",
                },
              ]
            }
            testID="btn-terms"
          >
            Terms for Agreement
          </Text>
          <Text
            style={
              Array [
                Object {
                  "color": "#777",
                  "lineHeight": 22,
                },
              ]
            }
          >
             and 
          </Text>
          <Text
            onPress={[Function]}
            style={
              Array [
                Object {
                  "color": "#1E6EFA",
                  "lineHeight": 22,
                  "textDecorationLine": "underline",
                },
              ]
            }
            testID="btn-privacy"
          >
            Privacy Policy
          </Text>
          <Text
            style={
              Array [
                Object {
                  "color": "#777",
                  "lineHeight": 22,
                },
              ]
            }
          >
             by going onto next step.
          </Text>
        </View>
      </View>
    </View>
  </RCTScrollView>
</RCTSafeAreaView>
`;
