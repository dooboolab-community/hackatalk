// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Rendering renders without crashing 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      {
        "backgroundColor": "#000",
        "flex": 1,
        "paddingBottom": 20,
      }
    }
  >
    <View
      onLayout={[Function]}
      style={
        [
          [
            {
              "flexBasis": 0,
              "flexDirection": "column",
              "flexGrow": 1,
              "flexShrink": 1,
            },
            undefined,
          ],
          {
            "paddingBottom": 0,
          },
        ]
      }
    >
      <View
        style={
          [
            {
              "paddingBottom": 0,
              "paddingLeft": 24,
              "paddingRight": 24,
              "paddingTop": 0,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            [
              {
                "alignSelf": "stretch",
                "flexDirection": "column",
              },
              {
                "marginTop": 40,
                "minHeight": 80,
              },
            ]
          }
          testID="container-id"
        >
          <View
            style={
              [
                [
                  {
                    "alignSelf": "stretch",
                    "borderBottomColor": "white",
                    "borderBottomWidth": 1,
                    "flexDirection": "column",
                    "justifyContent": "space-between",
                  },
                  {
                    "borderColor": "white",
                  },
                ],
                false,
                {
                  "borderColor": "white",
                },
                {
                  "borderBottomColor": "white",
                },
              ]
            }
          >
            <Text
              style={
                [
                  [
                    {
                      "color": "#6D6D6D",
                      "fontSize": 14,
                      "paddingHorizontal": 4,
                    },
                    undefined,
                  ],
                  false,
                  {},
                ]
              }
            >
              hello
            </Text>
            <TextInput
              autoCapitalize="none"
              editable={true}
              multiline={true}
              onBlur={[Function]}
              onChangeText={[Function]}
              onFocus={[Function]}
              placeholder="Please give sepecific reason on why you want to ban the following user."
              placeholderTextColor="#6D6D6D"
              secureTextEntry={true}
              style={
                [
                  [
                    {
                      "color": "white",
                      "fontSize": 14,
                      "paddingHorizontal": 10,
                      "paddingVertical": 10,
                    },
                    undefined,
                  ],
                  false,
                ]
              }
              testID="input-status"
              value=""
            />
          </View>
          <View
            style={
              {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <Text
              style={
                [
                  [
                    {
                      "color": "#FF002E",
                      "fontSize": 12,
                      "marginTop": 8,
                      "paddingHorizontal": 10,
                    },
                    undefined,
                  ],
                  {
                    "color": "#FF002E",
                    "flex": 1,
                  },
                ]
              }
            />
          </View>
        </View>
      </View>
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "opacity": 1,
          }
        }
      />
    </View>
  </RCTSafeAreaView>
</RNCSafeAreaProvider>
`;
