// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`[Setting] screen renders without crashing with Facebook auth type 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Array [
        Object {
          "backgroundColor": "#000",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "paddingTop": 10,
        },
        undefined,
      ]
    }
  >
    <RCTScrollView
      data={
        Array [
          Object {
            "data": Array [
              Object {
                "icon": <SvgMock
                  fill="white"
                  width={24}
                />,
                "label": "Signed in with Facebook",
                "onPress": [Function],
                "testID": "change-pw-item",
              },
            ],
            "title": "Login information",
          },
        ]
      }
      getItem={[Function]}
      getItemCount={[Function]}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={
        Array [
          0,
        ]
      }
      testID="test-section-list"
    >
      <View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#000",
                  "borderBottomColor": "#515151",
                  "borderBottomWidth": 1,
                  "height": 40,
                  "justifyContent": "center",
                  "marginLeft": 12,
                },
                undefined,
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#fff",
                    "marginLeft": 2,
                  },
                  undefined,
                ]
              }
            >
              Login information
            </Text>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={false}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "height": 52,
                "opacity": 1,
                "paddingLeft": 15,
                "paddingRight": 15,
                "width": "100%",
              }
            }
            testID="change-pw-item"
          >
            <SvgMock
              fill="white"
              width={24}
            />
            <Text
              style={
                Array [
                  Object {
                    "color": "white",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "flexShrink": 1,
                    "fontSize": 16,
                  },
                  Object {
                    "marginLeft": 8,
                    "marginTop": 2,
                  },
                ]
              }
            >
              Signed in with Facebook
            </Text>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        />
      </View>
    </RCTScrollView>
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
          "paddingHorizontal": 20,
          "paddingVertical": 20,
        }
      }
      testID="button-logout"
    />
  </RCTSafeAreaView>
</RNCSafeAreaProvider>
`;

exports[`[Setting] screen should render without crashing with Apple auth type 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Array [
        Object {
          "backgroundColor": "#000",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "paddingTop": 10,
        },
        undefined,
      ]
    }
  >
    <RCTScrollView
      data={
        Array [
          Object {
            "data": Array [
              Object {
                "icon": <SvgMock
                  fill="white"
                  width={24}
                />,
                "label": "Signed in with Apple",
                "onPress": [Function],
                "testID": "change-pw-item",
              },
            ],
            "title": "Login information",
          },
        ]
      }
      getItem={[Function]}
      getItemCount={[Function]}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={
        Array [
          0,
        ]
      }
      testID="test-section-list"
    >
      <View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#000",
                  "borderBottomColor": "#515151",
                  "borderBottomWidth": 1,
                  "height": 40,
                  "justifyContent": "center",
                  "marginLeft": 12,
                },
                undefined,
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#fff",
                    "marginLeft": 2,
                  },
                  undefined,
                ]
              }
            >
              Login information
            </Text>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={false}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "height": 52,
                "opacity": 1,
                "paddingLeft": 15,
                "paddingRight": 15,
                "width": "100%",
              }
            }
            testID="change-pw-item"
          >
            <SvgMock
              fill="white"
              width={24}
            />
            <Text
              style={
                Array [
                  Object {
                    "color": "white",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "flexShrink": 1,
                    "fontSize": 16,
                  },
                  Object {
                    "marginLeft": 8,
                    "marginTop": 2,
                  },
                ]
              }
            >
              Signed in with Apple
            </Text>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        />
      </View>
    </RCTScrollView>
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
          "paddingHorizontal": 20,
          "paddingVertical": 20,
        }
      }
      testID="button-logout"
    />
  </RCTSafeAreaView>
</RNCSafeAreaProvider>
`;

exports[`[Setting] screen should renders without crashing with Google auth type 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Array [
        Object {
          "backgroundColor": "#000",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "paddingTop": 10,
        },
        undefined,
      ]
    }
  >
    <RCTScrollView
      data={
        Array [
          Object {
            "data": Array [
              Object {
                "icon": <SvgMock
                  fill="white"
                  width={24}
                />,
                "label": "Signed in with Google",
                "onPress": [Function],
                "testID": "change-pw-item",
              },
            ],
            "title": "Login information",
          },
        ]
      }
      getItem={[Function]}
      getItemCount={[Function]}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={
        Array [
          0,
        ]
      }
      testID="test-section-list"
    >
      <View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#000",
                  "borderBottomColor": "#515151",
                  "borderBottomWidth": 1,
                  "height": 40,
                  "justifyContent": "center",
                  "marginLeft": 12,
                },
                undefined,
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#fff",
                    "marginLeft": 2,
                  },
                  undefined,
                ]
              }
            >
              Login information
            </Text>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={false}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "height": 52,
                "opacity": 1,
                "paddingLeft": 15,
                "paddingRight": 15,
                "width": "100%",
              }
            }
            testID="change-pw-item"
          >
            <SvgMock
              fill="white"
              width={24}
            />
            <Text
              style={
                Array [
                  Object {
                    "color": "white",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "flexShrink": 1,
                    "fontSize": 16,
                  },
                  Object {
                    "marginLeft": 8,
                    "marginTop": 2,
                  },
                ]
              }
            >
              Signed in with Google
            </Text>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        />
      </View>
    </RCTScrollView>
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
          "paddingHorizontal": 20,
          "paddingVertical": 20,
        }
      }
      testID="button-logout"
    />
  </RCTSafeAreaView>
</RNCSafeAreaProvider>
`;
