// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Rendering renders without crashing 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "flexBasis": 0,
          "flexDirection": "row",
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
        undefined,
      ]
    }
  >
    <RCTScrollView
      ListEmptyComponent={
        <Shared
          style={
            {
              "alignItems": "center",
              "alignSelf": "stretch",
              "flex": 1,
              "justifyContent": "center",
              "width": "100%",
            }
          }
        >
          No banned user
        </Shared>
      }
      ListFooterComponent={
        <View
          style={
            {
              "height": 60,
            }
          }
        />
      }
      contentContainerStyle={null}
      data={
        [
          {
            "__fragmentOwner": {
              "cacheConfig": {
                "force": true,
              },
              "identifier": "7bd15cc4e160652eb15d970256188c5b{}",
              "node": {
                "fragment": {
                  "abstractKey": null,
                  "argumentDefinitions": [],
                  "kind": "Fragment",
                  "metadata": null,
                  "name": "UserBlockedUsersQuery",
                  "selections": [
                    {
                      "alias": null,
                      "args": null,
                      "concreteType": "User",
                      "kind": "LinkedField",
                      "name": "blockedUsers",
                      "plural": true,
                      "selections": [
                        {
                          "alias": null,
                          "args": null,
                          "kind": "ScalarField",
                          "name": "id",
                          "storageKey": null,
                        },
                        {
                          "args": null,
                          "kind": "FragmentSpread",
                          "name": "ProfileModal_user",
                        },
                        {
                          "args": null,
                          "kind": "FragmentSpread",
                          "name": "UserListItem_user",
                        },
                      ],
                      "storageKey": null,
                    },
                  ],
                  "type": "Query",
                },
                "hash": "de6f1c0db8178def0afba2a4c90484fc",
                "kind": "Request",
                "operation": {
                  "argumentDefinitions": [],
                  "kind": "Operation",
                  "name": "UserBlockedUsersQuery",
                  "selections": [
                    {
                      "alias": null,
                      "args": null,
                      "concreteType": "User",
                      "kind": "LinkedField",
                      "name": "blockedUsers",
                      "plural": true,
                      "selections": [
                        {
                          "alias": null,
                          "args": null,
                          "kind": "ScalarField",
                          "name": "id",
                          "storageKey": null,
                        },
                        {
                          "alias": null,
                          "args": null,
                          "kind": "ScalarField",
                          "name": "photoURL",
                          "storageKey": null,
                        },
                        {
                          "alias": null,
                          "args": null,
                          "kind": "ScalarField",
                          "name": "name",
                          "storageKey": null,
                        },
                        {
                          "alias": null,
                          "args": null,
                          "kind": "ScalarField",
                          "name": "nickname",
                          "storageKey": null,
                        },
                        {
                          "alias": null,
                          "args": null,
                          "kind": "ScalarField",
                          "name": "hasBlocked",
                          "storageKey": null,
                        },
                        {
                          "alias": null,
                          "args": null,
                          "kind": "ScalarField",
                          "name": "statusMessage",
                          "storageKey": null,
                        },
                        {
                          "alias": null,
                          "args": null,
                          "kind": "ScalarField",
                          "name": "isFriend",
                          "storageKey": null,
                        },
                        {
                          "alias": null,
                          "args": null,
                          "kind": "ScalarField",
                          "name": "isOnline",
                          "storageKey": null,
                        },
                      ],
                      "storageKey": null,
                    },
                  ],
                },
                "params": {
                  "cacheID": "7bd15cc4e160652eb15d970256188c5b",
                  "id": null,
                  "metadata": {},
                  "name": "UserBlockedUsersQuery",
                  "operationKind": "query",
                  "text": "query UserBlockedUsersQuery {
  blockedUsers {
    id
    ...ProfileModal_user
    ...UserListItem_user
  }
}

fragment ProfileModal_user on User {
  id
  photoURL
  name
  nickname
  hasBlocked
  statusMessage
  isFriend
}

fragment UserListItem_user on User {
  id
  photoURL
  nickname
  name
  statusMessage
  isOnline
  hasBlocked
}
",
                },
              },
              "variables": {},
            },
            "__fragments": {
              "ProfileModal_user": {},
              "UserListItem_user": {},
            },
            "__id": "<User-mock-id-1>",
            "__isWithinUnmatchedTypeRefinement": false,
            "id": "<User-mock-id-1>",
          },
        ]
      }
      getItem={[Function]}
      getItemCount={[Function]}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={0.1}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={[]}
      style={
        {
          "alignSelf": "stretch",
        }
      }
      viewabilityConfigCallbackPairs={[]}
    >
      <View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              [
                {
                  "width": "100%",
                },
                undefined,
              ]
            }
          >
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
              testID="peer-button"
            >
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "backgroundColor": "#151C22",
                      "borderBottomColor": "#000",
                      "borderBottomWidth": 1,
                      "borderLeftColor": "#000",
                      "borderRightColor": "#000",
                      "borderTopColor": "#000",
                      "flexDirection": "row",
                      "height": 80,
                      "justifyContent": "flex-start",
                      "paddingBottom": 0,
                      "paddingLeft": 20,
                      "paddingRight": 20,
                      "paddingTop": 0,
                    },
                    undefined,
                  ]
                }
                testID="userListItem-wrapper"
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "height": 40,
                        "justifyContent": "center",
                        "width": 40,
                      },
                      undefined,
                    ]
                  }
                >
                  <Image
                    resizeMode="cover"
                    source={
                      {
                        "uri": "<mock-value-for-field-"photoURL">",
                      }
                    }
                    style={
                      [
                        {
                          "borderBottomLeftRadius": 20,
                          "borderBottomRightRadius": 20,
                          "borderTopLeftRadius": 20,
                          "borderTopRightRadius": 20,
                          "height": 40,
                          "width": 40,
                        },
                        undefined,
                      ]
                    }
                  />
                  <View
                    style={
                      {
                        "left": 0,
                        "position": "absolute",
                        "top": 0,
                      }
                    }
                  >
                    <Text />
                  </View>
                </View>
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "color": "white",
                        "fontSize": 14,
                        "fontWeight": "bold",
                        "marginLeft": 12,
                        "width": 200,
                      },
                      undefined,
                    ]
                  }
                >
                  &lt;mock-value-for-field-"nickname"&gt;
                </Text>
                <Text
                  ellipsizeMode="tail"
                  numberOfLines={1}
                  style={
                    [
                      {
                        "color": "white",
                        "fontSize": 12,
                        "maxWidth": 120,
                        "overflow": "hidden",
                        "paddingBottom": 4,
                        "paddingLeft": 8,
                        "paddingRight": 8,
                        "paddingTop": 4,
                        "position": "absolute",
                        "right": 20,
                      },
                      undefined,
                    ]
                  }
                >
                  &lt;mock-value-for-field-"statusMessage"&gt;
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
        >
          <View
            style={
              {
                "height": 60,
              }
            }
          />
        </View>
      </View>
    </RCTScrollView>
  </View>
</RNCSafeAreaProvider>
`;
